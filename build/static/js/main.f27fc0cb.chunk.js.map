{"version":3,"sources":["actions/types.js","components/contacts/Contact.js","actions/contactActions.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["GET_CONTACTS","DELETE_CONTACT","ADD_CONTACT","GET_CONTACT","UPDATE_CONTACT","Contact","state","showContactInfo","onDeleteClick","id","props","deleteContact","this","contact","name","email","phone","className","onClick","setState","style","cursor","float","color","bind","Link","to","marginRight","Component","connect","dispatch","a","axios","delete","type","payload","Contacts","getContacts","contacts","Fragment","map","get","res","data","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","uuidv4","addContact","history","push","target","post","EditContact","updContact","match","params","updateContact","nextProps","nextState","getContact","put","Header","branding","href","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","Switch","Route","exact","path","component","About","NotFound","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f27fc0cb.chunk.js","sourcesContent":["export const GET_CONTACTS = 'GET_CONTACTS';\r\nexport const DELETE_CONTACT = 'DELETE_CONTACT';\r\nexport const ADD_CONTACT = 'ADD_CONTACT';\r\nexport const GET_CONTACT = 'GET_CONTACT';\r\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {deleteContact} from '../../actions/contactActions';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = id => {\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{' '}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: 'pointer' }}\n          />\n          <i\n            className=\"fas fa-times\"\n            style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-pencil-alt\"\n              style={{\n                cursor: 'pointer',\n                float: 'right',\n                color: 'black',\n                marginRight: '1rem'\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteContact: PropTypes.func.isRequired\n};\n\nexport default connect(null, {deleteContact})(Contact);\n","import { GET_CONTACTS, GET_CONTACT, DELETE_CONTACT, ADD_CONTACT, UPDATE_CONTACT } from './types';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const getContacts = () => async dispatch => {\r\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n  dispatch({\r\n    type: GET_CONTACTS,\r\n    payload: res.data\r\n  });\r\n}\r\nexport const getContact = (id) => async dispatch => {\r\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n  dispatch({\r\n    type: GET_CONTACT,\r\n    payload: res.data\r\n  });\r\n}\r\n\r\nexport const deleteContact = (id) => async dispatch => {\r\n  await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n  dispatch({\r\n    type: DELETE_CONTACT,\r\n    payload: id\r\n  });\r\n}\r\n\r\nexport const addContact = (contact) => async dispatch => {\r\n  const res = await axios.post(\"https://jsonplaceholder.typicode.com/users\", contact)\r\n  dispatch(\r\n    {\r\n      type: ADD_CONTACT,\r\n      payload: res.data\r\n    }\r\n  ) \r\n}\r\nexport const updateContact = (contact) => async dispatch => {\r\n  const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${contact.id}`, contact)\r\n  dispatch(\r\n    {\r\n      type: UPDATE_CONTACT,\r\n      payload: res.data\r\n    }\r\n  ) \r\n}","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\n// import {GET_CONTACTS} from '../../actions/types';\nimport {getContacts} from '../../actions/contactActions';\n\nclass Contacts extends Component {\n\n  componentDidMount(){\n    this.props.getContacts;\n  }\n  \n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 mb-2\">\n          <span className=\"text-success\">Contact</span> List\n        </h1>\n        {contacts.map(contact => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contact.contacts\n});\n\n/*const mapDispatchToProps = (dispatch) => (\n  {\n    getContacts: () => (dispatch({type: GET_CONTACTS}))\n  }\n)*/\n\n\nexport default connect(mapStateToProps, getContacts)(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {addContact} from '../../actions/contactActions';\nimport { v4 as uuidv4 } from 'uuid';\n\n// uuidv4();\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      id: uuidv4(),\n      name,\n      email,\n      phone\n    };\n\n    //// SUBMIT CONTACT ////\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      \n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-success btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  addContact: PropTypes.func.isRequired\n}\n\nexport default connect(null, {addContact})(AddContact);\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getContact, updateContact } from '../../actions/contactActions';\n\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps, nextState){\n    const {name, email, phone} = nextProps.contact;\n    this.setState({\n      name,\n      email,\n      phone\n    })\n  }\n\n  componentDidMount(){\n    const {id} = this.props.match.params;\n    this.props.getContact(id);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    \n    const { id } = this.props.match.params;\n    \n    const updContact = {\n      id,\n      name,\n      email,\n      phone\n    };\n\n    //// UPDATE CONTACT ////\n\n    this.props.updateContact(updContact);\n\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-success btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  getContact: PropTypes.func.isRequired,\n  updateContact: PropTypes.func.isRequired,\n\n}\n\nconst mapStateToProps = state => ({\n  contact: state.contact.contact\n})\n\nexport default connect(mapStateToProps, {getContact, updateContact})(EditContact);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-success mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import { GET_CONTACTS, GET_CONTACT, DELETE_CONTACT, ADD_CONTACT, UPDATE_CONTACT } from '../actions/types';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  contact: {}\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n  switch(action.type){\r\n    case GET_CONTACTS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      };\r\n\r\n    case GET_CONTACT:\r\n      return {\r\n        ...state,\r\n        contact: action.payload\r\n      }\r\n\r\n    case DELETE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      }\r\n\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      }\r\n\r\n    case UPDATE_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {combineReducers} from 'redux';\r\nimport contactReducer from './contactReducer';\r\n\r\nexport default combineReducers({\r\n  contact: contactReducer\r\n});\r\n\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n           \n    );\n  }\n}\n\nexport default App;\n\n\n{/*  */}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}